snippet (r "github reconquest link" i
(https://github.com/reconquest/$1
endsnippet

snippet 2 "## header" b
## $1
endsnippet

snippet 3 "### header" b
### $1
endsnippet

snippet 4 "### header" b
#### $1
endsnippet

snippet h "h1 header"
${1:Header}
${1/./=/g}
endsnippet

snippet h2 "h2 header"
${1:Header}
${1/./-/g}
endsnippet

snippet ` "code block"
\`\`\`
$0
\`\`\`
endsnippet

snippet b "bold" w
**$1**
endsnippet

snippet sec "Section" b
# ${1:Section Name} #
$0
endsnippet

priority -10
snippet l "link" w
[${1:${VISUAL}}](${2:https://})
endsnippet

priority -10
snippet i "image" w
![$1](${2:https://})
endsnippet

snippet h "" w
<a href="${1:${VISUAL}}" target="_blank">${1:${VISUAL}}</a>
endsnippet

snippet godoc "godoc badge" w
[![](https://godoc.org/github.com/$1)](http://godoc.org/github.com/$1)
endsnippet

### LEGACY ####################################################################

global !p
def create_table(snip):
    # retrieving single line from current string and treat it like tabstops count
    placeholders_string = snip.buffer[snip.line].strip()[2:].split("x",1)
    rows_amount = int(placeholders_string[0])
    columns_amount = int(placeholders_string[1])

    # erase current line
    snip.buffer[snip.line] = ''

    # create anonymous snippet with expected content and number of tabstops
    anon_snippet_title = ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_delimiter = ':-|' * (columns_amount-1) + ":-\n"
    anon_snippet_body = ""
    for row in range(1,rows_amount+1):
        anon_snippet_body += ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body

    # expand anonymous snippet
    snip.expand_anon(anon_snippet_table)
endglobal

pre_expand "create_table(snip)"
snippet "tb(\d+x\d+)" "Customizable table" br
endsnippet
